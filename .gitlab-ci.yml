stages:
  - apply
image:
  name: hashicorp/terraform
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
before_script:
  - apk add --update-cache bash jq curl
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - rm -rf .terraform
  - terraform --version
  - terraform init
apply:
  stage: apply
  script:
    #TagSets
    - echo "Apply Tag Sets"
    - |
      terraform \
      -chdir=management_instance/tenants/tagsets/s3backend \
      init \
      -backend-config="key=tagsets" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/tenants/tagsets/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    # Accounts
    - echo "Apply Accounts"
    - |
      terraform \
      -chdir=shared/accounts/aws/s3backend \
      init \
      -backend-config="key=aws_account" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=shared/accounts/aws/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=aws_access_key=$AWS_ACCESS_KEY_ID \
      -var=aws_secret_key=$AWS_SECRET_ACCESS_KEY
    # Environments
    - echo "Apply Environments"
    - |
      terraform \
      -chdir=management_instance/environments/production/s3backend \
      init \
      -backend-config="key=environments" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/environments/production/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    # Feeds
    - echo "Apply Feeds"
    - |
      terraform \
      -chdir=shared/feeds/github/s3backend \
      init \
      -backend-config="key=feeds" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=shared/feeds/github/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=feed_github_password=$GH_TOKEN
    - |
      terraform \
      -chdir=shared/feeds/dockerhub/s3backend \
      init \
      -backend-config="key=dockerhubfeeds" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=shared/feeds/dockerhub/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=docker_username=$DOCKER_USERNAME \
      -var=docker_password=$DOCKER_PASSWORD
    # Library Variable Sets
    - echo "Apply Library Variable Sets"
    - |
      terraform \
      -chdir=management_instance/variables/octopus_server/s3backend \
      init \
      -backend-config="key=docker_hub_variables" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/variables/octopus_server/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    - |
      terraform \
      -chdir=management_instance/variables/docker/s3backend \
      init \
      -backend-config="key=octopus_docker_variables" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/variables/docker/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    - |
      terraform \
      -chdir=management_instance/variables/azure/s3backend \
      init \
      -backend-config="key=octopus_azure_variables" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/variables/azure/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    - |
      terraform \
      -chdir=management_instance/variables/config_as_code/s3backend \
      init \
      -backend-config="key=octopus_cac_variables" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/variables/config_as_code/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    - |
      terraform \
      -chdir=management_instance/project_groups/azure_web_app/s3backend \
      init \
      -backend-config="key=octopus_azure_project_group" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/project_groups/azure_web_app/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE
    # Projects
    - echo "Apply projects"
    - ./bash/clear_projects.sh
    - |
      terraform \
      -chdir=management_instance/projects/azure_logs/s3backend \
      init \
      -backend-config="key=azure_logs_project" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/projects/azure_logs/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=bucket_name=$BUCKET_NAME \
      -var=bucket_region=$BUCKET_REGION
    - |
      terraform \
      -chdir=management_instance/projects/init_space/s3backend \
      init \
      -backend-config="key=environments_project" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform apply -auto-approve \
      -chdir=management_instance/projects/init_space/s3backend \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=bucket_name=$BUCKET_NAME \
      -var=bucket_region=$BUCKET_REGION
    - |
      terraform \
      -chdir=management_instance/projects/azure_web_app_unmanaged_cac/s3backend \
      init \
      -backend-config="key=azure_web_app_unmanaged_cac" \
      -backend-config="bucket=$BUCKET_NAME" \
      -backend-config="region=$BUCKET_REGION"
    - |
      terraform \
      -chdir=management_instance/projects/azure_web_app_unmanaged_cac/s3backend \
      apply \
      -auto-approve \
      -var=octopus_server=$OCTOPUS_URL \
      -var=octopus_apikey=$OCTOPUS_API_KEY \
      -var=octopus_space_id=$OCTOPUS_SPACE \
      -var=bucket_name=$BUCKET_NAME \
      -var=bucket_region=$BUCKET_REGION