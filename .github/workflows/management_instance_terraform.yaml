name: Push Terraform Package to Management Instance
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline
      - name: Install Octopus Deploy CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1
        with:
          version: latest
      - name: Package
        run: |-
          octo pack \
           --id EnterprisePatterns \
           --version ${{ steps.determine_version.outputs.semVer }} \
           --format zip \
           --overwrite \
           --include '**/*'
        shell: bash
      - id: create_release
        name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }} Attempt ${{ github.run_attempt }}
          draft: ${{ github.ref == 'refs/heads/main' && 'false' || 'true' }}
          prerelease: ${{ github.ref == 'refs/heads/main' && 'false' || 'true' }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: EnterprisePatterns.${{ steps.determine_version.outputs.semVer }}.zip
          asset_name: EnterprisePatterns.${{ steps.determine_version.outputs.semVer }}.zip
          asset_content_type: application/octet-stream
      - name: Push packages to Octopus Deploy
        uses: OctopusDeploy/push-package-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          packages: EnterprisePatterns.${{ steps.determine_version.outputs.semVer }}.zip
          overwrite_mode: OverwriteExisting
permissions:
  id-token: write
  checks: write
  contents: write
